---
import Gallery from "../../layouts/Gallery.astro";
import ImageLinks from "../../components/ImageLinks.astro";
import { getPhotos } from "../../lib/photos";
import { Image } from "astro:assets";

export const titles = {
    "bay-area": "bay area photos",
    ksp: "kerbal space program photos",
    "high-school": "high school portfolio",
    silly: "¯\\_(ツ)_/¯",
};

export function getStaticPaths() {
    return Object.keys(titles).map((collection) => ({
        params: { collection },
    }));
}

const { collection } = Astro.params as { collection: keyof typeof titles };
const photos = getPhotos(collection).map((photo) => ({
    image: photo.image,
    alt: photo.name,
    href: `/photos/${collection}/${photo.name}`,
}));
---

<Gallery>
    <h1 class="w-fit p-2 rounded-md hover:-translate-y-2 hover:bg-lightish dark:hover:bg-darkish transition"><a href="/photos" class="font-bold">&lt; {titles[collection]}</a></h1>
    <section id="embla">
        <div class="flex justify-center gap-8">
            <button id="embla__prev" class="w-16 h-16 rounded-full grid place-items-center hover:bg-lightish dark:hover:bg-darkish dark:fill-white transition" type="button">
                <svg class="w-2/5 h-2/5" viewBox="0 0 532 532">
                    <path
                        d="M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z"
                    ></path>
                </svg>
            </button>

            <button id="embla__next" class="w-16 h-16 rounded-full grid place-items-center hover:bg-lightish dark:hover:bg-darkish dark:fill-white transition" type="button">
                <svg class="w-2/5 h-2/5" viewBox="0 0 532 532">
                    <path
                        d="M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z"
                    ></path>
                </svg>
            </button>
        </div>
        <div id="embla__viewport" class="overflow-hidden">
            <div class="embla__container">
                {
                    photos.map((photo) => (
                        <div class="embla__slide">
                            <Image src={photo.image} alt={photo.alt} loading="eager" />
                        </div>
                    ))
                }
            </div>
        </div>
    </section>
</Gallery>

<script>
    import EmblaCarousel from "embla-carousel";
    import { addButtonClickHandlers } from "../../lib/embla.ts";
    import { WheelGesturesPlugin } from "embla-carousel-wheel-gestures";

    const node = document.querySelector("#embla") as HTMLElement;
    const viewport = node.querySelector("#embla__viewport") as HTMLElement;
    const previous = node.querySelector("#embla__prev") as HTMLElement;
    const next = node.querySelector("#embla__next") as HTMLElement;

    const embla = EmblaCarousel(
        viewport,
        { loop: true, dragFree: false },
        [WheelGesturesPlugin()]
    );

    const removeButtonClickHandlers = addButtonClickHandlers(
        embla,
        previous,
        next,
    );

    embla.on("destroy", removeButtonClickHandlers);
</script>

<style is:global>
    #embla {
        --slide-spacing: 1rem;
        --slide-size: 90%;
    }

    .embla__container {
        display: flex;
        touch-action: pan-y pinch-zoom;
        margin-left: calc(var(--slide-spacing) * -1);
    }

    .embla__slide {
        flex: 0 0 var(--slide-size);
        min-width: 0;
        padding-left: var(--slide-spacing);
    }
</style>
